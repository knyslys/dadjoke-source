{
  "version": 3,
  "sources": ["../../tsparticles-engine/esm/Utils/EventDispatcher.js", "../../tsparticles-engine/esm/Core/Utils/Vector3d.js", "../../tsparticles-engine/esm/Core/Utils/Vector.js", "../../tsparticles-engine/esm/Utils/NumberUtils.js", "../../tsparticles-engine/esm/Utils/Utils.js", "../../tsparticles-engine/esm/Utils/ColorUtils.js", "../../tsparticles-engine/esm/Utils/CanvasUtils.js", "../../tsparticles-engine/esm/Core/Utils/Constants.js", "../../tsparticles-engine/esm/Core/Canvas.js", "../../tsparticles-engine/esm/Core/Utils/EventListeners.js", "../../tsparticles-engine/esm/Core/Utils/FrameManager.js", "../../tsparticles-engine/esm/Options/Classes/OptionsColor.js", "../../tsparticles-engine/esm/Options/Classes/Background/Background.js", "../../tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../../tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js", "../../tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js", "../../tsparticles-engine/esm/Options/Classes/ManualParticle.js", "../../tsparticles-engine/esm/Options/Classes/Responsive.js", "../../tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js", "../../tsparticles-engine/esm/Options/Classes/Theme/Theme.js", "../../tsparticles-engine/esm/Options/Classes/ColorAnimation.js", "../../tsparticles-engine/esm/Options/Classes/HslAnimation.js", "../../tsparticles-engine/esm/Options/Classes/AnimatableColor.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../../tsparticles-engine/esm/Options/Classes/Random.js", "../../tsparticles-engine/esm/Options/Classes/ValueWithRandom.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js", "../../tsparticles-engine/esm/Options/Classes/AnimationOptions.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Shadow.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Stroke.js", "../../tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js", "../../tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js", "../../tsparticles-engine/esm/Utils/OptionsUtils.js", "../../tsparticles-engine/esm/Options/Classes/Options.js", "../../tsparticles-engine/esm/Core/Utils/InteractionManager.js", "../../tsparticles-engine/esm/Core/Particle.js", "../../tsparticles-engine/esm/Core/Utils/Point.js", "../../tsparticles-engine/esm/Core/Utils/Range.js", "../../tsparticles-engine/esm/Core/Utils/Circle.js", "../../tsparticles-engine/esm/Core/Utils/Rectangle.js", "../../tsparticles-engine/esm/Core/Utils/QuadTree.js", "../../tsparticles-engine/esm/Core/Particles.js", "../../tsparticles-engine/esm/Core/Retina.js", "../../tsparticles-engine/esm/Core/Container.js", "../../tsparticles-engine/esm/Core/Loader.js", "../../tsparticles-engine/esm/Core/Utils/Plugins.js", "../../tsparticles-engine/esm/engine.js", "../../tsparticles-engine/esm/Utils/HslColorManager.js", "../../tsparticles-engine/esm/Utils/RgbColorManager.js", "../../tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js", "../../tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js", "../../tsparticles-engine/esm/index.js", "../../tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js", "../../tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js", "../../tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js", "../../tsparticles-plugin-absorbers/esm/AbsorberInstance.js", "../../tsparticles-plugin-absorbers/esm/Absorbers.js", "../../tsparticles-plugin-absorbers/esm/index.js", "../../tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js", "../../tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js", "../../tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js", "../../tsparticles-updater-destroy/esm/Options/Classes/Split.js", "../../tsparticles-updater-destroy/esm/Options/Classes/Destroy.js", "../../tsparticles-updater-destroy/esm/DestroyUpdater.js", "../../tsparticles-updater-destroy/esm/index.js", "../../tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js", "../../tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js", "../../tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js", "../../tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js", "../../tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js", "../../tsparticles-plugin-emitters/esm/EmitterInstance.js", "../../tsparticles-plugin-emitters/esm/Emitters.js", "../../tsparticles-plugin-emitters/esm/ShapeManager.js", "../../tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js", "../../tsparticles-plugin-emitters/esm/index.js", "../../tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js", "../../tsparticles-interaction-external-trail/esm/TrailMaker.js", "../../tsparticles-interaction-external-trail/esm/index.js", "../../tsparticles-updater-roll/esm/Options/Classes/RollLight.js", "../../tsparticles-updater-roll/esm/Options/Classes/Roll.js", "../../tsparticles-updater-roll/esm/RollUpdater.js", "../../tsparticles-updater-roll/esm/index.js", "../../tsparticles-particles.js/esm/index.js", "../../tsparticles-updater-angle/esm/Options/Classes/RotateAnimation.js", "../../tsparticles-updater-angle/esm/Options/Classes/Rotate.js", "../../tsparticles-updater-angle/esm/RotateUpdater.js", "../../tsparticles-updater-angle/esm/index.js", "../../tsparticles-move-base/esm/Utils.js", "../../tsparticles-move-base/esm/BaseMover.js", "../../tsparticles-move-base/esm/index.js", "../../tsparticles-shape-circle/esm/CircleDrawer.js", "../../tsparticles-shape-circle/esm/index.js", "../../tsparticles-updater-color/esm/ColorUpdater.js", "../../tsparticles-updater-color/esm/index.js", "../../tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js", "../../tsparticles-interaction-external-attract/esm/Attractor.js", "../../tsparticles-interaction-external-attract/esm/index.js", "../../tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js", "../../tsparticles-interaction-external-bounce/esm/Bouncer.js", "../../tsparticles-interaction-external-bounce/esm/index.js", "../../tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js", "../../tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js", "../../tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js", "../../tsparticles-interaction-external-bubble/esm/Bubbler.js", "../../tsparticles-interaction-external-bubble/esm/index.js", "../../tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js", "../../tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js", "../../tsparticles-interaction-external-connect/esm/Connector.js", "../../tsparticles-interaction-external-connect/esm/index.js", "../../tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js", "../../tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js", "../../tsparticles-interaction-external-grab/esm/Grabber.js", "../../tsparticles-interaction-external-grab/esm/index.js", "../../tsparticles-interaction-external-pause/esm/Pauser.js", "../../tsparticles-interaction-external-pause/esm/index.js", "../../tsparticles-interaction-external-push/esm/Options/Classes/Push.js", "../../tsparticles-interaction-external-push/esm/Pusher.js", "../../tsparticles-interaction-external-push/esm/index.js", "../../tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js", "../../tsparticles-interaction-external-remove/esm/Remover.js", "../../tsparticles-interaction-external-remove/esm/index.js", "../../tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js", "../../tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js", "../../tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js", "../../tsparticles-interaction-external-repulse/esm/Repulser.js", "../../tsparticles-interaction-external-repulse/esm/index.js", "../../tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js", "../../tsparticles-interaction-external-slow/esm/Slower.js", "../../tsparticles-interaction-external-slow/esm/index.js", "../../tsparticles-shape-image/esm/Utils.js", "../../tsparticles-shape-image/esm/ImageDrawer.js", "../../tsparticles-shape-image/esm/index.js", "../../tsparticles-updater-life/esm/Options/Classes/LifeDelay.js", "../../tsparticles-updater-life/esm/Options/Classes/LifeDuration.js", "../../tsparticles-updater-life/esm/Options/Classes/Life.js", "../../tsparticles-updater-life/esm/LifeUpdater.js", "../../tsparticles-updater-life/esm/index.js", "../../tsparticles-shape-line/esm/LineDrawer.js", "../../tsparticles-shape-line/esm/index.js", "../../tsparticles-updater-opacity/esm/OpacityUpdater.js", "../../tsparticles-updater-opacity/esm/index.js", "../../tsparticles-updater-out-modes/esm/Utils.js", "../../tsparticles-updater-out-modes/esm/BounceOutMode.js", "../../tsparticles-updater-out-modes/esm/DestroyOutMode.js", "../../tsparticles-updater-out-modes/esm/NoneOutMode.js", "../../tsparticles-updater-out-modes/esm/OutOutMode.js", "../../tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js", "../../tsparticles-updater-out-modes/esm/index.js", "../../tsparticles-move-parallax/esm/ParallaxMover.js", "../../tsparticles-move-parallax/esm/index.js", "../../tsparticles-interaction-particles-attract/esm/Attractor.js", "../../tsparticles-interaction-particles-attract/esm/index.js", "../../tsparticles-interaction-particles-collisions/esm/Absorb.js", "../../tsparticles-interaction-particles-collisions/esm/Bounce.js", "../../tsparticles-interaction-particles-collisions/esm/Destroy.js", "../../tsparticles-interaction-particles-collisions/esm/ResolveCollision.js", "../../tsparticles-interaction-particles-collisions/esm/Collider.js", "../../tsparticles-interaction-particles-collisions/esm/index.js", "../../tsparticles-interaction-particles-links/esm/CircleWarp.js", "../../tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js", "../../tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js", "../../tsparticles-interaction-particles-links/esm/Options/Classes/Links.js", "../../tsparticles-interaction-particles-links/esm/Linker.js", "../../tsparticles-interaction-particles-links/esm/interaction.js", "../../tsparticles-interaction-particles-links/esm/Utils.js", "../../tsparticles-interaction-particles-links/esm/LinkInstance.js", "../../tsparticles-interaction-particles-links/esm/plugin.js", "../../tsparticles-interaction-particles-links/esm/index.js", "../../tsparticles-shape-polygon/esm/PolygonDrawerBase.js", "../../tsparticles-shape-polygon/esm/PolygonDrawer.js", "../../tsparticles-shape-polygon/esm/TriangleDrawer.js", "../../tsparticles-shape-polygon/esm/index.js", "../../tsparticles-updater-size/esm/SizeUpdater.js", "../../tsparticles-updater-size/esm/index.js", "../../tsparticles-shape-square/esm/SquareDrawer.js", "../../tsparticles-shape-square/esm/index.js", "../../tsparticles-shape-star/esm/StarDrawer.js", "../../tsparticles-shape-star/esm/index.js", "../../tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js", "../../tsparticles-updater-stroke-color/esm/index.js", "../../tsparticles-shape-text/esm/TextDrawer.js", "../../tsparticles-shape-text/esm/index.js", "../../tsparticles-slim/esm/index.js", "../../tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js", "../../tsparticles-updater-tilt/esm/Options/Classes/Tilt.js", "../../tsparticles-updater-tilt/esm/TiltUpdater.js", "../../tsparticles-updater-tilt/esm/index.js", "../../tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js", "../../tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js", "../../tsparticles-updater-twinkle/esm/TwinkleUpdater.js", "../../tsparticles-updater-twinkle/esm/index.js", "../../tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js", "../../tsparticles-updater-wobble/esm/Options/Classes/Wobble.js", "../../tsparticles-updater-wobble/esm/WobbleUpdater.js", "../../tsparticles-updater-wobble/esm/index.js", "../../tsparticles/esm/index.js"],
  "sourcesContent": ["export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        var _a;\n        this.removeEventListener(type, listener);\n        if (!this._listeners.get(type)) {\n            this._listeners.set(type, []);\n        }\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.push(listener);\n    }\n    dispatchEvent(type, args) {\n        var _a;\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n", "export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n", "import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n", "import { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (!easings.get(name)) {\n        easings.set(name, easing);\n    }\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = typeof random === \"boolean\"\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case \"top\":\n                return -Math.PI / 2;\n            case \"top-right\":\n                return -Math.PI / 4;\n            case \"right\":\n                return 0;\n            case \"bottom-right\":\n                return Math.PI / 4;\n            case \"bottom\":\n                return Math.PI / 2;\n            case \"bottom-left\":\n                return (3 * Math.PI) / 4;\n            case \"left\":\n                return Math.PI;\n            case \"top-left\":\n                return (-3 * Math.PI) / 4;\n            case \"inside\":\n                return Math.atan2(center.y - position.y, center.x - position.x);\n            case \"outside\":\n                return Math.atan2(position.y - center.y, position.x - center.x);\n            default:\n                return getRandom() * Math.PI * 2;\n        }\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (((_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * 100) * data.size.width) / 100,\n        y: (((_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * data.size.width,\n        y: (_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n", "import { collisionVelocity, getDistances, getRandom, getValue } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return res instanceof Array ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function animate() {\n    return isSsr()\n        ? (callback) => setTimeout(callback)\n        : (callback) => (requestAnimationFrame || setTimeout)(callback);\n}\nexport function cancelAnimation() {\n    return isSsr()\n        ? (handle) => clearTimeout(handle)\n        : (handle) => (cancelAnimationFrame || clearTimeout)(handle);\n}\nexport function isInArray(value, array) {\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight !== null && weight !== void 0 ? weight : \"400\"} 36px '${font !== null && font !== void 0 ? font : \"Verdana\"}'`);\n    }\n    catch (_a) {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (typeof source !== \"object\") {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], isObject = typeof value === \"object\", destDict = destination;\n            destDict[key] =\n                isObject && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, particle.velocity.x, getValue(particle.options.bounce.horizontal));\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, particle.velocity.y, getValue(particle.options.bounce.vertical));\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return obj instanceof Array ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\n", "import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (color.value instanceof Array) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (color.value instanceof Array) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor(), destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n", "import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    var _a, _b, _c, _d, _e;\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * ((_a = transform.a) !== null && _a !== void 0 ? _a : 1),\n        b: rotateData.sin * ((_b = transform.b) !== null && _b !== void 0 ? _b : 1),\n        c: -rotateData.sin * ((_c = transform.c) !== null && _c !== void 0 ? _c : 1),\n        d: rotateData.cos * ((_d = transform.d) !== null && _d !== void 0 ? _d : 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = (_e = particle.strokeWidth) !== null && _e !== void 0 ? _e : 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n", "export const generatedAttribute = \"generated\";\nexport const touchEndEvent = \"touchend\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchMoveEvent = \"touchmove\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\n", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.stop();\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    async init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            console.error(e);\n        }\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    stop() {\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    async _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n        if (!trail.enable) {\n            return;\n        }\n        if (trailFill.color) {\n            const fillColor = rangeColorToRgb(trailFill.color);\n            if (!fillColor) {\n                return;\n            }\n            const trail = options.particles.move.trail;\n            this._trailFill = {\n                color: Object.assign({}, fillColor),\n                opacity: 1 / trail.length,\n            };\n        }\n        else {\n            await new Promise((resolve, reject) => {\n                if (!trailFill.image) {\n                    return;\n                }\n                const img = document.createElement(\"img\");\n                img.addEventListener(\"load\", () => {\n                    this._trailFill = {\n                        image: img,\n                        opacity: 1 / trail.length,\n                    };\n                    resolve();\n                });\n                img.addEventListener(\"error\", (evt) => {\n                    reject(evt.error);\n                });\n                img.src = trailFill.image;\n            });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _paintImage(image, opacity) {\n        this.draw((ctx) => {\n            paintImage(ctx, this.size, image, opacity);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n", "import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.handlers = {\n            mouseMove: (e) => this.mouseTouchMove(e),\n            touchStart: (e) => this.mouseTouchMove(e),\n            touchMove: (e) => this.mouseTouchMove(e),\n            touchEnd: () => this.mouseTouchFinish(),\n            mouseLeave: () => this.mouseTouchFinish(),\n            touchCancel: () => this.mouseTouchFinish(),\n            touchEndClick: (e) => this.mouseTouchClick(e),\n            mouseUp: (e) => this.mouseTouchClick(e),\n            mouseDown: () => this.mouseDown(),\n            visibilityChange: () => this.handleVisibilityChange(),\n            themeChange: (e) => this.handleThemeChange(e),\n            oldThemeChange: (e) => this.handleThemeChange(e),\n            resize: () => this.handleWindowResize(),\n        };\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n            if (!mousePos) {\n                return;\n            }\n            mouseInteractivity.clickPosition = Object.assign({}, mousePos);\n            mouseInteractivity.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n    }\n    manageListeners(add) {\n        var _a;\n        const handlers = this.handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(handlers.oldThemeChange);\n                }\n                else {\n                    mediaMatch.removeListener(handlers.oldThemeChange);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, handlers.resize, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n", "function initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nexport class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (!container.smooth &&\n                container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (delta.value > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n", "export class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n", "export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n", "import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n", "export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (typeof data.resize === \"boolean\") {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n", "export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (this._container) {\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadModeOptions) {\n                        interactor.loadModeOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n", "import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n", "import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n", "import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n", "export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n", "export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n", "export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n", "import { Random } from \"./Random\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n", "import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n", "export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n", "import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n", "export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.position = data.position ? deepExtend({}, data.position) : undefined;\n    }\n}\n", "import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : Object.assign({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = (_b = (_a = data.outModes) !== null && _a !== void 0 ? _a : data.outMode) !== null && _b !== void 0 ? _b : data.out_mode;\n        if (outModes !== undefined) {\n            if (typeof outModes === \"object\") {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { AnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 2;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n", "export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = (_b = (_a = data.width) !== null && _a !== void 0 ? _a : data.area) !== null && _b !== void 0 ? _b : data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = (_c = data.height) !== null && _c !== void 0 ? _c : data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n", "import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[charKey]) !== null && _a !== void 0 ? _a : this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[imageKey]) !== null && _a !== void 0 ? _a : this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[polygonKey]) !== null && _a !== void 0 ? _a : this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, imageKey, imageAltKey, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n", "import { AnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 5;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n", "import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend((_a = this.groups[group]) !== null && _a !== void 0 ? _a : {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = (_c = (_b = data.move) === null || _b === void 0 ? void 0 : _b.collisions) !== null && _c !== void 0 ? _c : (_d = data.move) === null || _d === void 0 ? void 0 : _d.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = (_e = data.stroke) !== null && _e !== void 0 ? _e : (_f = data.shape) === null || _f === void 0 ? void 0 : _f.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n", "import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e;\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = (_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode;\n        if (typeof fullScreen === \"boolean\") {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = (_d = this._findDefaultTheme(\"dark\")) === null || _d === void 0 ? void 0 : _d.name;\n        this.defaultThemes.light = (_e = this._findDefaultTheme(\"light\")) === null || _e === void 0 ? void 0 : _e.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.options);\n        return responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    _findDefaultTheme(mode) {\n        var _a;\n        return ((_a = this.themes.find((theme) => theme.default.value && theme.default.mode === mode)) !== null && _a !== void 0 ? _a : this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n    }\n    _importPreset(preset) {\n        this.load(this._engine.plugins.getPreset(preset));\n    }\n}\n", "export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = this._engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.handleClickMode) {\n                interactor.handleClickMode(mode);\n            }\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.reset(particle);\n            }\n        }\n    }\n}\n", "import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        var _a;\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        (_a = this.pathGenerator) === null || _a === void 0 ? void 0 : _a.reset(this);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a;\n        return this._getRollColor((_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a;\n        return this._getRollColor((_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = \"increasing\";\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = \"increasing\";\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size);\n                    this.size.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = \"decreasing\";\n                    break;\n            }\n        }\n        this.size.initialValue = this.size.value;\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = Object.assign({}, this.options.move.center), isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: moveCenter.x * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: moveCenter.y * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_f = this.options.move.center.radius) !== null && _f !== void 0 ? _f : 0,\n            mode: (_g = this.options.move.center.mode) !== null && _g !== void 0 ? _g : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            (_h = mover.init) === null || _h === void 0 ? void 0 : _h.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_j = plugin.particleCreated) === null || _j === void 0 ? void 0 : _j.call(plugin, this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        var _a;\n        for (const updater of this.container.particles.updaters) {\n            (_a = updater.reset) === null || _a === void 0 ? void 0 : _a.call(updater, this);\n        }\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _getRollColor(color) {\n        var _a;\n        if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n            return color;\n        }\n        const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_a = this.roll.angle) !== null && _a !== void 0 ? _a : 0) + backSum) / (Math.PI / backFactor)) % 2;\n        if (!rolled) {\n            return color;\n        }\n        if (this.backColor) {\n            return this.backColor;\n        }\n        if (this.roll.alter) {\n            return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n        }\n        return color;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n", "export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n", "export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n", "import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\n        }\n        return false;\n    }\n}\n", "import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n", "import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._points = [];\n        this._divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this._NE) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this._NW) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this._SE) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this._SW) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    query(range, check, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            (_a = this._NE) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n            (_b = this._NW) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n            (_c = this._SE) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n            (_d = this._SW) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this._NE = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this._NW = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this._SE = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this._SW = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this._divided = true;\n    }\n}\n", "import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n", "import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n", "import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        const element = this.canvas.element;\n        if (element) {\n            element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                await plugin.init();\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.start) {\n                        await plugin.start();\n                    }\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n", "import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    console.error(`tsParticles - Error ${response.status} while retrieving config file`);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n", "import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            if (!this.getShapeDrawer(type)) {\n                this.drawers.set(type, drawer);\n            }\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n", "import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n    constructor() {\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this._loader = new Loader(this);\n        this.plugins = new Plugins(this);\n    }\n    get version() {\n        return \"2.9.3\";\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addMover(name, moverInitializer) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    init() {\n        if (!this._initialized) {\n            this._initialized = true;\n        }\n    }\n    async load(tagId, options) {\n        return this._loader.load(tagId, options);\n    }\n    async loadFromArray(tagId, options, index) {\n        return this._loader.load(tagId, options, index);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options) {\n        return this._loader.set(id, element, options);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return this._loader.setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n", "export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n", "export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n", "import { Engine } from \"./engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nconst rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\naddColorManager(rgbColorManager);\naddColorManager(hslColorManager);\nconst tsParticles = new Engine();\ntsParticles.init();\nexport * from \"./Core/Interfaces/Colors\";\nexport * from \"./Core/Interfaces/IBounds\";\nexport * from \"./Core/Interfaces/IBubbleParticleData\";\nexport * from \"./Core/Interfaces/ICircleBouncer\";\nexport * from \"./Core/Interfaces/IColorManager\";\nexport * from \"./Core/Interfaces/IContainerInteractivity\";\nexport * from \"./Core/Interfaces/IContainerPlugin\";\nexport * from \"./Core/Interfaces/ICoordinates\";\nexport * from \"./Core/Interfaces/IDelta\";\nexport * from \"./Core/Interfaces/IDimension\";\nexport * from \"./Core/Interfaces/IDistance\";\nexport * from \"./Core/Interfaces/IExternalInteractor\";\nexport * from \"./Core/Interfaces/IInteractor\";\nexport * from \"./Core/Interfaces/IMouseData\";\nexport * from \"./Core/Interfaces/IMovePathGenerator\";\nexport * from \"./Core/Interfaces/IParticle\";\nexport * from \"./Core/Interfaces/IParticleColorStyle\";\nexport * from \"./Core/Interfaces/IParticleHslAnimation\";\nexport * from \"./Core/Interfaces/IParticlesInteractor\";\nexport * from \"./Core/Interfaces/IParticleLife\";\nexport * from \"./Core/Interfaces/IParticleRetinaProps\";\nexport * from \"./Core/Interfaces/IParticleRoll\";\nexport * from \"./Core/Interfaces/IParticleTransformValues\";\nexport * from \"./Core/Interfaces/IParticleUpdater\";\nexport * from \"./Core/Interfaces/IParticleValueAnimation\";\nexport * from \"./Core/Interfaces/IParticlesMover\";\nexport * from \"./Core/Interfaces/IPlugin\";\nexport * from \"./Core/Interfaces/IRangeValue\";\nexport * from \"./Core/Interfaces/IRectSideResult\";\nexport * from \"./Core/Interfaces/IShapeDrawer\";\nexport * from \"./Core/Interfaces/IShapeValues\";\nexport * from \"./Core/Interfaces/ISlowParticleData\";\nexport * from \"./Core/Utils/Circle\";\nexport * from \"./Core/Utils/Constants\";\nexport * from \"./Core/Utils/ExternalInteractorBase\";\nexport * from \"./Core/Utils/ParticlesInteractorBase\";\nexport * from \"./Core/Utils/Point\";\nexport * from \"./Core/Utils/Range\";\nexport * from \"./Core/Utils/Rectangle\";\nexport * from \"./Core/Utils/Vector\";\nexport * from \"./Core/Utils/Vector3d\";\nexport * from \"./Enums/Directions/MoveDirection\";\nexport * from \"./Enums/Directions/RotateDirection\";\nexport * from \"./Enums/Directions/OutModeDirection\";\nexport * from \"./Enums/Modes/ClickMode\";\nexport * from \"./Enums/Modes/DivMode\";\nexport * from \"./Enums/Modes/HoverMode\";\nexport * from \"./Enums/Modes/CollisionMode\";\nexport * from \"./Enums/Modes/OutMode\";\nexport * from \"./Enums/Modes/SizeMode\";\nexport * from \"./Enums/Modes/ThemeMode\";\nexport * from \"./Enums/Modes/ResponsiveMode\";\nexport * from \"./Enums/Types/AlterType\";\nexport * from \"./Enums/Types/DestroyType\";\nexport * from \"./Enums/Types/GradientType\";\nexport * from \"./Enums/Types/InteractorType\";\nexport * from \"./Enums/Types/ParticleOutType\";\nexport * from \"./Enums/Types/StartValueType\";\nexport * from \"./Enums/Types/DivType\";\nexport * from \"./Enums/Types/EasingType\";\nexport * from \"./Enums/Types/EventType\";\nexport * from \"./Enums/AnimationStatus\";\nexport * from \"./Enums/InteractivityDetect\";\nexport * from \"./Options/Classes/AnimatableColor\";\nexport * from \"./Options/Classes/AnimationOptions\";\nexport * from \"./Options/Classes/Background/Background\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMask\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMaskCover\";\nexport * from \"./Options/Classes/ColorAnimation\";\nexport * from \"./Options/Classes/FullScreen/FullScreen\";\nexport * from \"./Options/Classes/HslAnimation\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Events\";\nexport * from \"./Options/Classes/Interactivity/Events/HoverEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Parallax\";\nexport * from \"./Options/Classes/Interactivity/Interactivity\";\nexport * from \"./Options/Classes/Interactivity/Modes/Modes\";\nexport * from \"./Options/Classes/ManualParticle\";\nexport * from \"./Options/Classes/Options\";\nexport * from \"./Options/Classes/OptionsColor\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounce\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounceFactor\";\nexport * from \"./Options/Classes/Particles/Collisions/Collisions\";\nexport * from \"./Options/Classes/Particles/Collisions/CollisionsOverlap\";\nexport * from \"./Options/Classes/Particles/ParticlesOptions\";\nexport * from \"./Options/Classes/Particles/Shadow\";\nexport * from \"./Options/Classes/Particles/Stroke\";\nexport * from \"./Options/Classes/Particles/Move/MoveAttract\";\nexport * from \"./Options/Classes/Particles/Move/Move\";\nexport * from \"./Options/Classes/Particles/Move/MoveAngle\";\nexport * from \"./Options/Classes/Particles/Move/MoveCenter\";\nexport * from \"./Options/Classes/Particles/Move/MoveGravity\";\nexport * from \"./Options/Classes/Particles/Move/OutModes\";\nexport * from \"./Options/Classes/Particles/Move/Path/MovePath\";\nexport * from \"./Options/Classes/Particles/Move/Spin\";\nexport * from \"./Options/Classes/Particles/Move/MoveTrail\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesNumber\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesDensity\";\nexport * from \"./Options/Classes/Particles/Opacity/Opacity\";\nexport * from \"./Options/Classes/Particles/Opacity/OpacityAnimation\";\nexport * from \"./Options/Classes/Particles/Shape/Shape\";\nexport * from \"./Options/Classes/Particles/Size/Size\";\nexport * from \"./Options/Classes/Particles/Size/SizeAnimation\";\nexport * from \"./Options/Classes/Particles/ZIndex/ZIndex\";\nexport * from \"./Options/Classes/Responsive\";\nexport * from \"./Options/Classes/Theme/Theme\";\nexport * from \"./Options/Classes/Theme/ThemeDefault\";\nexport * from \"./Options/Classes/ValueWithRandom\";\nexport * from \"./Options/Interfaces/Background/IBackground\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMask\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMaskCover\";\nexport * from \"./Options/Interfaces/FullScreen/IFullScreen\";\nexport * from \"./Options/Interfaces/IAnimatable\";\nexport * from \"./Options/Interfaces/IAnimatableColor\";\nexport * from \"./Options/Interfaces/IAnimation\";\nexport * from \"./Options/Interfaces/IColorAnimation\";\nexport * from \"./Options/Interfaces/IHslAnimation\";\nexport * from \"./Options/Interfaces/IManualParticle\";\nexport * from \"./Options/Interfaces/IOptionLoader\";\nexport * from \"./Options/Interfaces/IOptions\";\nexport * from \"./Options/Interfaces/IOptionsColor\";\nexport * from \"./Options/Interfaces/IResponsive\";\nexport * from \"./Options/Interfaces/IValueWithRandom\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IClickEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IDivEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IEvents\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IHoverEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IParallax\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModeDiv\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModes\";\nexport * from \"./Options/Interfaces/Interactivity/IInteractivity\";\nexport * from \"./Options/Interfaces/Particles/Bounce/IParticlesBounce\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisions\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisionsOverlap\";\nexport * from \"./Options/Interfaces/Particles/IParticlesOptions\";\nexport * from \"./Options/Interfaces/Particles/IShadow\";\nexport * from \"./Options/Interfaces/Particles/IStroke\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAttract\";\nexport * from \"./Options/Interfaces/Particles/Move/IMove\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAngle\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveCenter\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveGravity\";\nexport * from \"./Options/Interfaces/Particles/Move/Path/IMovePath\";\nexport * from \"./Options/Interfaces/Particles/Move/IOutModes\";\nexport * from \"./Options/Interfaces/Particles/Move/ISpin\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveTrail\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesDensity\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesNumber\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacity\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacityAnimation\";\nexport * from \"./Options/Interfaces/Particles/Shape/ICharacterShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IImageShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IPolygonShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShapeValues\";\nexport * from \"./Options/Interfaces/Particles/Shape/IStarShape\";\nexport * from \"./Options/Interfaces/Particles/Size/ISize\";\nexport * from \"./Options/Interfaces/Particles/Size/ISizeAnimation\";\nexport * from \"./Options/Interfaces/Particles/ZIndex/IZIndex\";\nexport * from \"./Options/Interfaces/Theme/ITheme\";\nexport * from \"./Options/Interfaces/Theme/IThemeDefault\";\nexport * from \"./Types/CustomEventArgs\";\nexport * from \"./Types/CustomEventListener\";\nexport * from \"./Types/ParticlesGroups\";\nexport * from \"./Types/PathOptions\";\nexport * from \"./Types/RangeValue\";\nexport * from \"./Types/RecursivePartial\";\nexport * from \"./Types/ShapeData\";\nexport * from \"./Types/ShapeDrawerFunctions\";\nexport * from \"./Types/SingleOrMultiple\";\nexport * from \"./Utils/CanvasUtils\";\nexport * from \"./Utils/ColorUtils\";\nexport * from \"./Utils/HslColorManager\";\nexport * from \"./Utils/NumberUtils\";\nexport * from \"./Utils/OptionsUtils\";\nexport * from \"./Utils/RgbColorManager\";\nexport * from \"./Utils/Utils\";\nexport { tsParticles };\nexport { CollisionsAbsorb } from \"./Options/Classes/Particles/Collisions/CollisionsAbsorb\";\nexport { ResizeEvent } from \"./Options/Classes/Interactivity/Events/ResizeEvent\";\n", "export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (typeof data.limit === \"number\") {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n", "import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n", "import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = rangeColorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    calcPosition() {\n        const exactPosition = calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n", "import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple((_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n", "import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n", "import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n", "import { OptionsColor, deepExtend, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = (_a = this.colorOffset) !== null && _a !== void 0 ? _a : {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n", "import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n", "import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        var _a, _b, _c;\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n        if (splitOptions.color) {\n            options.color.load(splitOptions.color);\n        }\n        else if (splitOptions.colorOffset && parentColor) {\n            options.color.load({\n                value: {\n                    hsl: {\n                        h: parentColor.h + getRangeValue((_a = splitOptions.colorOffset.h) !== null && _a !== void 0 ? _a : 0),\n                        s: parentColor.s + getRangeValue((_b = splitOptions.colorOffset.s) !== null && _b !== void 0 ? _b : 0),\n                        l: parentColor.l + getRangeValue((_c = splitOptions.colorOffset.l) !== null && _c !== void 0 ? _c : 0),\n                    },\n                },\n            });\n        }\n        else {\n            options.color.load({\n                value: {\n                    hsl: parent.getFillColor(),\n                },\n            });\n        }\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n", "import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container));\n}\n", "import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n", "export class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n", "import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n", "export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n", "import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n", "import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n", "import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== \"emitter\") {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && modeEmitters.value instanceof Array) {\n            if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n        }\n        const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n            this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n", "const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n", "import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n", "import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n", "import { ExternalInteractorBase, isInArray } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        var _a, _b, _c, _d;\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        let canEmit = true;\n        if (trailOptions.pauseOnStop) {\n            if (container.interactivity.mouse.position === this._lastPosition ||\n                (((_a = container.interactivity.mouse.position) === null || _a === void 0 ? void 0 : _a.x) === ((_b = this._lastPosition) === null || _b === void 0 ? void 0 : _b.x) &&\n                    ((_c = container.interactivity.mouse.position) === null || _c === void 0 ? void 0 : _c.y) === ((_d = this._lastPosition) === null || _d === void 0 ? void 0 : _d.y))) {\n                canEmit = false;\n            }\n        }\n        if (container.interactivity.mouse.position) {\n            this._lastPosition = {\n                x: container.interactivity.mouse.position.x,\n                y: container.interactivity.mouse.position.y,\n            };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source === null || source === void 0 ? void 0 : source.trail);\n        }\n    }\n    reset() {\n    }\n}\n", "import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container));\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n", "import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n", "import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Roll } from \"./Options/Classes/Roll\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor, max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    getTransformValues(particle) {\n        var _a;\n        const roll = ((_a = particle.roll) === null || _a === void 0 ? void 0 : _a.enable) && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable) {\n            particle.roll = {\n                enable: rollOpt.enable,\n                horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n                vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n                angle: getRandom() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = rangeColorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: getRangeValue(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: getRangeValue(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = {\n                enable: false,\n                horizontal: false,\n                vertical: false,\n                angle: 0,\n                speed: 0,\n            };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source === null || source === void 0 ? void 0 : source.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n", "import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater());\n}\n", "const initPjs = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initPjs };\n", "import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ValueWithRandom } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n", "import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n        }\n    }\n    update(particle, delta) {\n        var _a, _b;\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n        particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n", "import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadAngleUpdater(engine) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container));\n}\n", "import { clamp, getDistances, getRandom } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), hDistance = particle.retina.maxDistance.horizontal, vDistance = particle.retina.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    var _a;\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = (_a = particle.pathGenerator) === null || _a === void 0 ? void 0 : _a.generate(particle);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n", "import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, gravityOptions = options.move.gravity, spinOptions = options.move.spin;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            applyPath(particle, delta);\n            const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n                particle.velocity.y +=\n                    (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n            }\n            if (moveDrift && moveSpeed) {\n                particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n            }\n            const decay = particle.moveDecay;\n            if (decay != 1) {\n                particle.velocity.multTo(decay);\n            }\n            const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) &&\n                maxSpeed > 0 &&\n                ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                    (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n                velocity.y = gravityFactor * maxSpeed;\n                if (moveSpeed) {\n                    particle.velocity.y = velocity.y / moveSpeed;\n                }\n            }\n            const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n", "import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine) {\n    engine.addMover(\"base\", () => new BaseMover());\n}\n", "export class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        var _a;\n        const shapeData = particle.shapeData, angle = (_a = shapeData === null || shapeData === void 0 ? void 0 : shapeData.angle) !== null && _a !== void 0 ? _a : {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange =\n            typeof angle !== \"object\"\n                ? {\n                    min: 0,\n                    max: (angle * Math.PI) / 180,\n                }\n                : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n", "import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine) {\n    await engine.addShape(\"circle\", new CircleDrawer());\n}\n", "import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    const h = (_a = particle.color) === null || _a === void 0 ? void 0 : _a.h, s = (_b = particle.color) === null || _b === void 0 ? void 0 : _b.s, l = (_c = particle.color) === null || _c === void 0 ? void 0 : _c.l;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n", "import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container));\n}\n", "export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n", "import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n        }\n    }\n    reset() {\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n    hoverAttract() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n        if (!attractOptions) {\n            return;\n        }\n        const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n}\n", "import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container));\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n", "export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n", "import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source === null || source === void 0 ? void 0 : source.bounce);\n        }\n    }\n    reset() {\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (area instanceof Circle) {\n                circleBounce(circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (radius ** 2 * Math.PI) / 2,\n                    velocity: Vector.origin,\n                    factor: Vector.origin,\n                });\n            }\n            else if (area instanceof Rectangle) {\n                rectBounce(particle, calculateBounds(position, radius));\n            }\n        }\n    }\n    processMouseBounce() {\n        const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n        if (!radius || radius < 0 || !mousePos) {\n            return;\n        }\n        this.processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, radius + tolerance)\n                : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n}\n", "import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container));\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n", "import { OptionsColor, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = this.color instanceof Array ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n", "import { BubbleBase } from \"./BubbleBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n", "import { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n", "import { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble(delta);\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble(delta);\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n    clickBubble(delta) {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubble = options.interactivity.modes.bubble;\n        if (!bubble || !mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= distance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble(delta) {\n        const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0 || mousePos === undefined) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!bubbleOptions) {\n            return;\n        }\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = itemFromSingleOrMultiple(modeColor);\n            particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c, _d;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : (_b = options.interactivity.modes.bubble) === null || _b === void 0 ? void 0 : _b.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_d = (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubble = options.interactivity.modes.bubble;\n        if (!bubble || bubbleParam === undefined) {\n            return;\n        }\n        const bubbleDuration = bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    singleSelectorHover(delta, selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble || !selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.clear(particle, delta, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n}\n", "import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container));\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n", "export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { ExternalInteractorBase, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, ls, pos1, pos2);\n    });\n}\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source === null || source === void 0 ? void 0 : source.connect);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container));\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n", "import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\n", "import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : (_b = particle.options.links) === null || _b === void 0 ? void 0 : _b.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source === null || source === void 0 ? void 0 : source.grab);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container));\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n", "import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n", "import { Pauser } from \"./Pauser\";\nexport function loadExternalPauseInteraction(engine) {\n    engine.addInteractor(\"externalPause\", (container) => new Pauser(container));\n}\n", "export class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n", "import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const pushNb = pushOptions.quantity;\n            if (pushNb <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source === null || source === void 0 ? void 0 : source.push);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container));\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n", "export class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n", "import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Remover } from \"./Remover\";\nexport function loadExternalRemoveInteraction(engine) {\n    engine.addInteractor(\"externalRemove\", (container) => new Remover(container));\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n", "export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n", "import { RepulseBase } from \"./RepulseBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n", "import { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n", "import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulse = options.interactivity.modes.repulse;\n            if (!repulse || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, repulse.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n        }\n    }\n    reset() {\n    }\n    clickRepulse() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            if (!repulseDistance || repulseDistance < 0) {\n                return;\n            }\n            const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n        if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        if (!repulseOptions) {\n            return;\n        }\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n}\n", "import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container));\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n", "export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source === null || source === void 0 ? void 0 : source.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slow = options.interactivity.modes.slow;\n        if (!slow || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slow.factor;\n        if (dist <= radius) {\n            particle.slow.inRange = true;\n            particle.slow.factor = proximityFactor / slowFactor;\n        }\n    }\n}\n", "import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container));\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n", "import { getStyleFromHsl } from \"tsparticles-engine\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1), imageRes = {\n        color,\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n", "import { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor() {\n        this._images = [];\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        this._images = [];\n    }\n    draw(context, particle, radius, opacity) {\n        var _a;\n        const image = particle.image, element = image === null || image === void 0 ? void 0 : image.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_a = image === null || image === void 0 ? void 0 : image.ratio) !== null && _a !== void 0 ? _a : 1, pos = {\n            x: -radius,\n            y: -radius,\n        };\n        context.globalAlpha = opacity;\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        context.globalAlpha = 1;\n    }\n    getImages(container) {\n        const containerImages = this._images.find((t) => t.id === container.id);\n        if (!containerImages) {\n            this._images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    getSidesCount() {\n        return 12;\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const container = particle.container, images = this.getImages(container).images, imageData = particle.shapeData, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        var _a;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(container).images, imageData = particle.shapeData, color = particle.getFillColor(), replaceColor = (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            var _a, _b;\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    loaded: true,\n                    ratio: imageData.width / imageData.height,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = (_a = imageData.fill) !== null && _a !== void 0 ? _a : particle.fill, close = (_b = imageData.close) !== null && _b !== void 0 ? _b : particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n    async loadImageShape(container, imageShape) {\n        var _a;\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substring(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = ((_a = imageShape.replaceColor) !== null && _a !== void 0 ? _a : imageShape.replace_color) ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch (_b) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n}\n", "import { ImageDrawer } from \"./ImageDrawer\";\nexport async function loadImageShape(engine) {\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer());\n}\n", "import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n", "import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source === null || source === void 0 ? void 0 : source.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n", "import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container));\n}\n", "export class LineDrawer {\n    draw(context, particle, radius) {\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n", "import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine) {\n    await engine.addShape(\"line\", new LineDrawer());\n}\n", "import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case \"increasing\":\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = \"decreasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = \"increasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = \"increasing\";\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = \"increasing\";\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = \"decreasing\";\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n        particle.opacity.initialValue = particle.opacity.value;\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n", "import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container));\n}\n", "import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.right < 0) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.bottom < 0) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n", "import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n", "import { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n", "import { Vector, isPointInside } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n", "import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n", "import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        for (const updater of this.updaters) {\n            updater.update(particle, direction, delta, outMode);\n        }\n    }\n}\n", "import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container));\n}\n", "import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions;\n        if (isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const parallaxForce = options.interactivity.events.onHover.parallax.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        }, parallaxSmooth = options.interactivity.events.onHover.parallax.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (centerDistance.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (centerDistance.y - particle.offset.y) / parallaxSmooth;\n    }\n}\n", "import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine) {\n    engine.addMover(\"parallax\", () => new ParallaxMover());\n}\n", "import { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n", "import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container));\n}\n", "import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n", "import { circleBounce, circleBounceDataFromParticle } from \"tsparticles-engine\";\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\n", "import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p1 : p2;\n        deleteP.destroy();\n    }\n}\n", "import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n", "import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n", "import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container));\n}\n", "import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n", "import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nimport { OptionsColor } from \"tsparticles-engine\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "import { Circle, ParticlesInteractorBase, getDistance, getLinkRandomColor } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !(linkOpt2 === null || linkOpt2 === void 0 ? void 0 : linkOpt2.enable) ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        return !!((_a = particle.options.links) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadParticlesOptions(options, ...sources) {\n        var _a, _b;\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load((_b = (_a = source === null || source === void 0 ? void 0 : source.links) !== null && _a !== void 0 ? _a : source === null || source === void 0 ? void 0 : source.lineLinked) !== null && _b !== void 0 ? _b : source === null || source === void 0 ? void 0 : source.line_linked);\n        }\n    }\n    reset() {\n    }\n    setColor(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.linkContainer, linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (linkColor) {\n            return;\n        }\n        const optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n        if (linksOptions.id === undefined) {\n            container.particles.linksColor = linkColor;\n        }\n        else {\n            container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n    }\n}\n", "import { Linker } from \"./Linker\";\nexport async function loadInteraction(engine) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container));\n}\n", "import { drawLine, drawTriangle, getDistance, getDistances, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\n", "import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        var _a;\n        const pOptions = particle.options;\n        if (!particle.links || particle.links.length <= 0) {\n            return;\n        }\n        const p1Links = particle.links.filter((l) => pOptions.links && this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency);\n        for (const link of p1Links) {\n            this.drawTriangles(pOptions, particle, link, p1Links);\n            if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n                this.drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio;\n        particle.retina.linksDistance = particle.options.links.distance * ratio;\n        particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            if (!p1.options.links) {\n                return;\n            }\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            var _a;\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n            if (getDistance(pos1, pos2) > linksDistance ||\n                getDistance(pos3, pos2) > linksDistance ||\n                getDistance(pos3, pos1) > linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawTriangles(options, p1, link, p1Links) {\n        var _a, _b, _c;\n        const p2 = link.destination;\n        if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n            return;\n        }\n        const vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter((t) => {\n            const linkFreq = this.getLinkFrequency(p2, t.destination);\n            return (p2.options.links &&\n                linkFreq <= p2.options.links.frequency &&\n                p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n        });\n        if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n            return;\n        }\n        for (const vertex of vertices) {\n            const p3 = vertex.destination, triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n            if (triangleFreq > options.links.triangles.frequency) {\n                continue;\n            }\n            this.drawLinkTriangle(p1, link, vertex);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n}\n", "import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadPlugin(engine) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin);\n}\n", "import { loadInteraction } from \"./interaction\";\nimport { loadPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine) {\n    await loadInteraction(engine);\n    await loadPlugin(engine);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n", "import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData, sides = Math.round(getRangeValue((_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5));\n        return sides;\n    }\n}\n", "import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n", "import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n", "import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine) {\n    await engine.addShape(\"polygon\", new PolygonDrawer());\n}\nexport async function loadTriangleShape(engine) {\n    await engine.addShape(\"triangle\", new TriangleDrawer());\n}\nexport async function loadPolygonShape(engine) {\n    await loadGenericPolygonShape(engine);\n    await loadTriangleShape(engine);\n}\n", "import { clamp, getRandom } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, minValue = particle.size.min, maxValue = particle.size.max, decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case \"increasing\":\n            if (particle.size.value >= maxValue) {\n                particle.size.status = \"decreasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.size.value <= minValue) {\n                particle.size.status = \"increasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    if (particle.size.velocity && decay !== 1) {\n        particle.size.velocity *= decay;\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init(particle) {\n        var _a;\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                (((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n", "import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater());\n}\n", "const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        context.rect(-radius / fixFactor, -radius / fixFactor, (radius * 2) / fixFactor, (radius * 2) / fixFactor);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n", "import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine) {\n    const drawer = new SquareDrawer();\n    await engine.addShape([\"edge\", \"square\"], drawer);\n}\n", "import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        var _a;\n        const sides = particle.sides, inset = (_a = particle.starInset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return Math.round(getRangeValue((_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5));\n    }\n    particleInit(container, particle) {\n        var _a;\n        const star = particle.shapeData, inset = getRangeValue((_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2);\n        particle.starInset = inset;\n    }\n}\n", "import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine) {\n    await engine.addShape(\"star\", new StarDrawer());\n}\n", "import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !colorValue.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const h = particle.strokeColor.h;\n    if (h) {\n        updateColorValue(delta, h, particle.strokeAnimation.h, 360, false);\n    }\n    const s = particle.strokeColor.s;\n    if (s) {\n        updateColorValue(delta, s, particle.strokeAnimation.s, 100, true);\n    }\n    const l = particle.strokeColor.l;\n    if (l) {\n        updateColorValue(delta, l, particle.strokeAnimation.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b, _c;\n        const container = this.container;\n        const stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue((_a = stroke.opacity) !== null && _a !== void 0 ? _a : 1);\n        particle.strokeAnimation = (_b = stroke.color) === null || _b === void 0 ? void 0 : _b.animation;\n        const strokeHslColor = (_c = rangeColorToHsl(stroke.color)) !== null && _c !== void 0 ? _c : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const color = particle.strokeAnimation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_a = particle.strokeColor) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && particle.strokeColor.h.enable) ||\n                (((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && particle.strokeColor.s.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && particle.strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n", "import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container));\n}\n", "import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = textParticle.text, style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\", weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\", size = Math.round(radius) * 2, font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n}\n", "import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    await engine.addShape(validTypes, new TextDrawer());\n}\n", "import { initPjs } from \"tsparticles-particles.js\";\nimport { loadAngleUpdater } from \"tsparticles-updater-angle\";\nimport { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine) {\n    await loadBaseMover(engine);\n    await loadParallaxMover(engine);\n    await loadExternalAttractInteraction(engine);\n    await loadExternalBounceInteraction(engine);\n    await loadExternalBubbleInteraction(engine);\n    await loadExternalConnectInteraction(engine);\n    await loadExternalGrabInteraction(engine);\n    await loadExternalPauseInteraction(engine);\n    await loadExternalPushInteraction(engine);\n    await loadExternalRemoveInteraction(engine);\n    await loadExternalRepulseInteraction(engine);\n    await loadExternalSlowInteraction(engine);\n    await loadParticlesAttractInteraction(engine);\n    await loadParticlesCollisionsInteraction(engine);\n    await loadParticlesLinksInteraction(engine);\n    await loadCircleShape(engine);\n    await loadImageShape(engine);\n    await loadLineShape(engine);\n    await loadPolygonShape(engine);\n    await loadSquareShape(engine);\n    await loadStarShape(engine);\n    await loadTextShape(engine);\n    await loadLifeUpdater(engine);\n    await loadOpacityUpdater(engine);\n    await loadSizeUpdater(engine);\n    await loadAngleUpdater(engine);\n    await loadColorUpdater(engine);\n    await loadStrokeColorUpdater(engine);\n    await loadOutModesUpdater(engine);\n    await initPjs(engine);\n}\n", "import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { TiltAnimation } from \"./TiltAnimation\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        var _a;\n        const tilt = ((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n", "import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container));\n}\n", "import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n", "import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n", "import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source === null || source === void 0 ? void 0 : source.twinkle);\n        }\n    }\n    update() {\n    }\n}\n", "import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater());\n}\n", "import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n", "import { WobbleSpeed } from \"./WobbleSpeed\";\nimport { setRangeValue } from \"tsparticles-engine\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (typeof data.speed === \"number\") {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n", "import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n        return;\n    }\n    const angleSpeed = particle.wobble.angleSpeed * delta.factor, moveSpeed = particle.wobble.moveSpeed * delta.factor, distance = (moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI;\n    particle.wobble.angle += angleSpeed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        var _a;\n        return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n", "import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container));\n}\n", "import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine) {\n    await loadSlim(engine);\n    await loadDestroyUpdater(engine);\n    await loadRollUpdater(engine);\n    await loadTiltUpdater(engine);\n    await loadTwinkleUpdater(engine);\n    await loadWobbleUpdater(engine);\n    await loadExternalTrailInteraction(engine);\n    await loadAbsorbersPlugin(engine);\n    await loadEmittersPlugin(engine);\n}\n"],
  "mappings": "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",
  "names": ["divMode", "_a", "trail", "theme", "shapes", "destroy", "_a", "bounce", "lineStyle", "container", "container", "container", "_a", "Attractor", "Attractor", "_a", "checkDestroy", "updateColorValue"]
}
